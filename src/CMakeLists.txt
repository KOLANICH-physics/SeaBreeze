file(GLOB_RECURSE COMMON_SOURCE_CXX_FILES "${CMAKE_CURRENT_SOURCE_DIR}/api/seabreezeapi/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/api/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/common/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/vendors/OceanOptics/*.cpp")

set(SYSTEM_ABSTRACTION_LAYER_DIR "${CMAKE_CURRENT_SOURCE_DIR}/native")
set(COMMON_SOURCE_FILES ${COMMON_SOURCE_HPP_FILES} ${COMMON_SOURCE_CXX_FILES})

if(WIN32)
	set(PLATFORM_WINDOWS_HEADER_FILES
		${INCLUDE_DIR}/native/rs232/windows/NativeRS232Windows.h
		${INCLUDE_DIR}/native/network/windows/NativeSocketWindows.h
		${INCLUDE_DIR}/native/usb/winusb/WindowsGUID.h
	)
	#set(PLATFORM_SOURCE_FILES ${PLATFORM_WINDOWS_HEADER_FILES} ${PLATFORM_SOURCE_FILES_STUDIO})
	set(PLATFORM_SOURCE_FILES ${PLATFORM_WINDOWS_HEADER_FILES})
	# ${CSHARP_SAMPLE_FILES} ${CONSOLE_DEMO_SAMPLE_FILES} ${WINDOWS_TEST_SOURCE_FILES}
endif()
if(APPLE)
	set(CMAKE_OSX_ARCHITECTURES "x86_64")
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -ggdb ")

	find_library(IOKIT_FRAMEWORK IOKit)
	find_library(COREFOUNDATION_FRAMEWORK CoreFoundation)
	set(LIBS_TO_LINK ${COREFOUNDATION_FRAMEWORK} ${IOKIT_FRAMEWORK})
	list(APPEND PLATFORM_SOURCE_FILES ${COMMON_SOURCE_CXX_POSIX_FILES_NATIVE})
elseif(UNIX)
# need to copy os-support/linux/FilesToInstall/10-oceanoptics.rules to the rules folder
	#add_compile_options(-std=c++0x)

	set(LIBS_TO_LINK ${CMAKE_THREAD_LIBS_INIT})
endif()

set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-dynamic-exception-spec")

add_subdirectory("${SYSTEM_ABSTRACTION_LAYER_DIR}")

add_library(SeaBreeze SHARED ${COMMON_SOURCE_FILES} ${PLATFORM_SOURCE_FILES})
target_link_libraries(SeaBreeze PRIVATE ${LIBS_TO_LINK} ${SYSTEM_ABSTRACTION_LAYER_LIBS})
target_compile_definitions(SeaBreeze PRIVATE "-DBUILD_DLL")
target_include_directories(SeaBreeze PUBLIC ${INCLUDE_DIR})
